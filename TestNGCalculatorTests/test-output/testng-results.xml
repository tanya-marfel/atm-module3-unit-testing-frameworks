<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="35" ignored="218" total="350" passed="97">
  <reporter-output>
  </reporter-output>
  <suite name="Extended" duration-ms="55218" started-at="2017-12-15T11:24:13Z" finished-at="2017-12-15T11:25:08Z">
    <groups>
      <group name="cos">
        <method signature="BasicCosTest.testNegativeAngle()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@6767c1fc]" name="testNegativeAngle" class="com.epam.testng.basictests.BasicCosTest"/>
        <method signature="CosTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@39aeed2f]" name="testAngles" class="com.epam.testng.parameterizedtests.CosTest"/>
        <method signature="CosTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@4678c730]" name="testAngles" class="com.epam.testng.parameterizedtests.CosTest"/>
        <method signature="CosTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@724af044]" name="testAngles" class="com.epam.testng.parameterizedtests.CosTest"/>
        <method signature="BasicSinTest.testNegativeAngle()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2b98378d]" name="testNegativeAngle" class="com.epam.testng.basictests.BasicSinTest"/>
      </group> <!-- cos -->
      <group name="squareRoot">
        <method signature="BasicSqrtTest.testNegativeNumbers()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@e25b2fe]" name="testNegativeNumbers" class="com.epam.testng.basictests.BasicSqrtTest"/>
      </group> <!-- squareRoot -->
      <group name="subtraction">
        <method signature="SubDoublesTest.subPositiveAndNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@36d4b5c]" name="subPositiveAndNegativeLongs" class="com.epam.testng.parameterizedtests.SubDoublesTest"/>
        <method signature="SubLongsTest.subPositiveAndNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@6d00a15d]" name="subPositiveAndNegativeLongs" class="com.epam.testng.parameterizedtests.SubLongsTest"/>
      </group> <!-- subtraction -->
      <group name="extended">
        <method signature="SumDoublesTest.sumPositiveAndNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@23ceabc1]" name="sumPositiveAndNegativeLongs" class="com.epam.testng.parameterizedtests.SumDoublesTest"/>
        <method signature="SumLongsTest.sumPositiveAndNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@5d5eef3d]" name="sumPositiveAndNegativeLongs" class="com.epam.testng.parameterizedtests.SumLongsTest"/>
        <method signature="SubDoublesTest.subPositiveAndNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@36d4b5c]" name="subPositiveAndNegativeLongs" class="com.epam.testng.parameterizedtests.SubDoublesTest"/>
        <method signature="SubLongsTest.subPositiveAndNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@6d00a15d]" name="subPositiveAndNegativeLongs" class="com.epam.testng.parameterizedtests.SubLongsTest"/>
        <method signature="BasicMultDoublesTest.multNegativeaAndPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@7dc7cbad]" name="multNegativeaAndPositiveLongs" class="com.epam.testng.basictests.BasicMultDoublesTest"/>
        <method signature="BasicMultLongsTest.multNegativeaAndPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@d2cc05a]" name="multNegativeaAndPositiveLongs" class="com.epam.testng.basictests.BasicMultLongsTest"/>
        <method signature="MultDoublesTest.testDoublesMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@62ee68d8]" name="testDoublesMult" class="com.epam.testng.parameterizedtests.MultDoublesTest"/>
        <method signature="MultDoublesTest.testDoublesMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@735b5592]" name="testDoublesMult" class="com.epam.testng.parameterizedtests.MultDoublesTest"/>
        <method signature="MultDoublesTest.testDoublesMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@9629756]" name="testDoublesMult" class="com.epam.testng.parameterizedtests.MultDoublesTest"/>
        <method signature="MultLongsTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@4520ebad]" name="testLongMult" class="com.epam.testng.parameterizedtests.MultLongsTest"/>
        <method signature="MultLongsTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@5419f379]" name="testLongMult" class="com.epam.testng.parameterizedtests.MultLongsTest"/>
        <method signature="MultLongsTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@58651fd0]" name="testLongMult" class="com.epam.testng.parameterizedtests.MultLongsTest"/>
        <method signature="BasicDivDoublesTest.divideNegativeAndPositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@482f8f11]" name="divideNegativeAndPositiveValues" class="com.epam.testng.basictests.BasicDivDoublesTest"/>
        <method signature="BasicDivLongsTest.divideNegativeAndPositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@1593948d]" name="divideNegativeAndPositiveValues" class="com.epam.testng.basictests.BasicDivLongsTest"/>
        <method signature="DivDoublesTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@20e2cbe0]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivDoublesTest"/>
        <method signature="DivDoublesTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@2a5ca609]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivDoublesTest"/>
        <method signature="DivDoublesTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@68be2bc2]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivDoublesTest"/>
        <method signature="DivLongsTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@28feb3fa]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivLongsTest"/>
        <method signature="DivLongsTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@51565ec2]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivLongsTest"/>
        <method signature="DivLongsTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@675d3402]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivLongsTest"/>
        <method signature="BasicCosTest.testNegativeAngle()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@6767c1fc]" name="testNegativeAngle" class="com.epam.testng.basictests.BasicCosTest"/>
        <method signature="CosTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@39aeed2f]" name="testAngles" class="com.epam.testng.parameterizedtests.CosTest"/>
        <method signature="CosTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@4678c730]" name="testAngles" class="com.epam.testng.parameterizedtests.CosTest"/>
        <method signature="CosTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@724af044]" name="testAngles" class="com.epam.testng.parameterizedtests.CosTest"/>
        <method signature="BasicSinTest.testNegativeAngle()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2b98378d]" name="testNegativeAngle" class="com.epam.testng.basictests.BasicSinTest"/>
        <method signature="SinTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@18be83e4]" name="testAngles" class="com.epam.testng.parameterizedtests.SinTest"/>
        <method signature="SinTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@4b9e13df]" name="testAngles" class="com.epam.testng.parameterizedtests.SinTest"/>
        <method signature="SinTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@cb5822]" name="testAngles" class="com.epam.testng.parameterizedtests.SinTest"/>
        <method signature="BasicCtgTest.testNegativeAngle()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@59fa1d9b]" name="testNegativeAngle" class="com.epam.testng.basictests.BasicCtgTest"/>
        <method signature="CtgTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@14acaea5]" name="testAngles" class="com.epam.testng.parameterizedtests.CtgTest"/>
        <method signature="CtgTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@46d56d67]" name="testAngles" class="com.epam.testng.parameterizedtests.CtgTest"/>
        <method signature="CtgTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@d8355a8]" name="testAngles" class="com.epam.testng.parameterizedtests.CtgTest"/>
        <method signature="BasicTgTest.testNegativeAngle()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@26653222]" name="testNegativeAngle" class="com.epam.testng.basictests.BasicTgTest"/>
        <method signature="TgTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@29774679]" name="testAngles" class="com.epam.testng.parameterizedtests.TgTest"/>
        <method signature="TgTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@3ffc5af1]" name="testAngles" class="com.epam.testng.parameterizedtests.TgTest"/>
        <method signature="TgTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@5e5792a0]" name="testAngles" class="com.epam.testng.parameterizedtests.TgTest"/>
        <method signature="BasicPowTest.testPowTwoOfRation()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@57baeedf]" name="testPowTwoOfRation" class="com.epam.testng.basictests.BasicPowTest"/>
        <method signature="PowTest.testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@1794d431]" name="testPower" class="com.epam.testng.parameterizedtests.PowTest"/>
        <method signature="PowTest.testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@39c0f4a]" name="testPower" class="com.epam.testng.parameterizedtests.PowTest"/>
        <method signature="PowTest.testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="testPower" class="com.epam.testng.parameterizedtests.PowTest"/>
        <method signature="PowTest.testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@4883b407]" name="testPower" class="com.epam.testng.parameterizedtests.PowTest"/>
        <method signature="PowTest.testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@7d9d1a19]" name="testPower" class="com.epam.testng.parameterizedtests.PowTest"/>
        <method signature="BasicSqrtTest.testNegativeNumbers()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@e25b2fe]" name="testNegativeNumbers" class="com.epam.testng.basictests.BasicSqrtTest"/>
        <method signature="SqrtTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@204f30ec]" name="testLongMult" class="com.epam.testng.parameterizedtests.SqrtTest"/>
        <method signature="SqrtTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@4667ae56]" name="testLongMult" class="com.epam.testng.parameterizedtests.SqrtTest"/>
        <method signature="SqrtTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@77cd7a0]" name="testLongMult" class="com.epam.testng.parameterizedtests.SqrtTest"/>
      </group> <!-- extended -->
      <group name="division">
        <method signature="BasicDivDoublesTest.divideNegativeAndPositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@482f8f11]" name="divideNegativeAndPositiveValues" class="com.epam.testng.basictests.BasicDivDoublesTest"/>
        <method signature="BasicDivLongsTest.divideNegativeAndPositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@1593948d]" name="divideNegativeAndPositiveValues" class="com.epam.testng.basictests.BasicDivLongsTest"/>
        <method signature="DivDoublesTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@20e2cbe0]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivDoublesTest"/>
        <method signature="DivDoublesTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@2a5ca609]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivDoublesTest"/>
        <method signature="DivDoublesTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@68be2bc2]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivDoublesTest"/>
        <method signature="DivLongsTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@28feb3fa]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivLongsTest"/>
        <method signature="DivLongsTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@51565ec2]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivLongsTest"/>
        <method signature="DivLongsTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@675d3402]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivLongsTest"/>
      </group> <!-- division -->
      <group name="longs">
        <method signature="SumLongsTest.sumPositiveAndNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@5d5eef3d]" name="sumPositiveAndNegativeLongs" class="com.epam.testng.parameterizedtests.SumLongsTest"/>
        <method signature="SubLongsTest.subPositiveAndNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@6d00a15d]" name="subPositiveAndNegativeLongs" class="com.epam.testng.parameterizedtests.SubLongsTest"/>
        <method signature="BasicMultLongsTest.multNegativeaAndPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@d2cc05a]" name="multNegativeaAndPositiveLongs" class="com.epam.testng.basictests.BasicMultLongsTest"/>
        <method signature="MultLongsTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@4520ebad]" name="testLongMult" class="com.epam.testng.parameterizedtests.MultLongsTest"/>
        <method signature="MultLongsTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@5419f379]" name="testLongMult" class="com.epam.testng.parameterizedtests.MultLongsTest"/>
        <method signature="MultLongsTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@58651fd0]" name="testLongMult" class="com.epam.testng.parameterizedtests.MultLongsTest"/>
        <method signature="BasicDivLongsTest.divideNegativeAndPositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@1593948d]" name="divideNegativeAndPositiveValues" class="com.epam.testng.basictests.BasicDivLongsTest"/>
        <method signature="DivLongsTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@28feb3fa]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivLongsTest"/>
        <method signature="DivLongsTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@51565ec2]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivLongsTest"/>
        <method signature="DivLongsTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@675d3402]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivLongsTest"/>
      </group> <!-- longs -->
      <group name="tg">
        <method signature="BasicTgTest.testNegativeAngle()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@26653222]" name="testNegativeAngle" class="com.epam.testng.basictests.BasicTgTest"/>
        <method signature="TgTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@29774679]" name="testAngles" class="com.epam.testng.parameterizedtests.TgTest"/>
        <method signature="TgTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@3ffc5af1]" name="testAngles" class="com.epam.testng.parameterizedtests.TgTest"/>
        <method signature="TgTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@5e5792a0]" name="testAngles" class="com.epam.testng.parameterizedtests.TgTest"/>
      </group> <!-- tg -->
      <group name="doubles">
        <method signature="SumDoublesTest.sumPositiveAndNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@23ceabc1]" name="sumPositiveAndNegativeLongs" class="com.epam.testng.parameterizedtests.SumDoublesTest"/>
        <method signature="SubDoublesTest.subPositiveAndNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@36d4b5c]" name="subPositiveAndNegativeLongs" class="com.epam.testng.parameterizedtests.SubDoublesTest"/>
        <method signature="BasicMultDoublesTest.multNegativeaAndPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@7dc7cbad]" name="multNegativeaAndPositiveLongs" class="com.epam.testng.basictests.BasicMultDoublesTest"/>
        <method signature="MultDoublesTest.testDoublesMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@62ee68d8]" name="testDoublesMult" class="com.epam.testng.parameterizedtests.MultDoublesTest"/>
        <method signature="MultDoublesTest.testDoublesMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@735b5592]" name="testDoublesMult" class="com.epam.testng.parameterizedtests.MultDoublesTest"/>
        <method signature="MultDoublesTest.testDoublesMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@9629756]" name="testDoublesMult" class="com.epam.testng.parameterizedtests.MultDoublesTest"/>
        <method signature="BasicDivDoublesTest.divideNegativeAndPositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@482f8f11]" name="divideNegativeAndPositiveValues" class="com.epam.testng.basictests.BasicDivDoublesTest"/>
        <method signature="DivDoublesTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@20e2cbe0]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivDoublesTest"/>
        <method signature="DivDoublesTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@2a5ca609]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivDoublesTest"/>
        <method signature="DivDoublesTest.testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@68be2bc2]" name="testLongDiv" class="com.epam.testng.parameterizedtests.DivDoublesTest"/>
      </group> <!-- doubles -->
      <group name="sqrt">
        <method signature="SqrtTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@204f30ec]" name="testLongMult" class="com.epam.testng.parameterizedtests.SqrtTest"/>
        <method signature="SqrtTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@4667ae56]" name="testLongMult" class="com.epam.testng.parameterizedtests.SqrtTest"/>
        <method signature="SqrtTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@77cd7a0]" name="testLongMult" class="com.epam.testng.parameterizedtests.SqrtTest"/>
      </group> <!-- sqrt -->
      <group name="ctg">
        <method signature="BasicCtgTest.testNegativeAngle()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@59fa1d9b]" name="testNegativeAngle" class="com.epam.testng.basictests.BasicCtgTest"/>
        <method signature="CtgTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@14acaea5]" name="testAngles" class="com.epam.testng.parameterizedtests.CtgTest"/>
        <method signature="CtgTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@46d56d67]" name="testAngles" class="com.epam.testng.parameterizedtests.CtgTest"/>
        <method signature="CtgTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@d8355a8]" name="testAngles" class="com.epam.testng.parameterizedtests.CtgTest"/>
      </group> <!-- ctg -->
      <group name="sin">
        <method signature="SinTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@18be83e4]" name="testAngles" class="com.epam.testng.parameterizedtests.SinTest"/>
        <method signature="SinTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@4b9e13df]" name="testAngles" class="com.epam.testng.parameterizedtests.SinTest"/>
        <method signature="SinTest.testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@cb5822]" name="testAngles" class="com.epam.testng.parameterizedtests.SinTest"/>
      </group> <!-- sin -->
      <group name="multiplication">
        <method signature="BasicMultDoublesTest.multNegativeaAndPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@7dc7cbad]" name="multNegativeaAndPositiveLongs" class="com.epam.testng.basictests.BasicMultDoublesTest"/>
        <method signature="BasicMultLongsTest.multNegativeaAndPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@d2cc05a]" name="multNegativeaAndPositiveLongs" class="com.epam.testng.basictests.BasicMultLongsTest"/>
        <method signature="MultDoublesTest.testDoublesMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@62ee68d8]" name="testDoublesMult" class="com.epam.testng.parameterizedtests.MultDoublesTest"/>
        <method signature="MultDoublesTest.testDoublesMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@735b5592]" name="testDoublesMult" class="com.epam.testng.parameterizedtests.MultDoublesTest"/>
        <method signature="MultDoublesTest.testDoublesMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@9629756]" name="testDoublesMult" class="com.epam.testng.parameterizedtests.MultDoublesTest"/>
        <method signature="MultLongsTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@4520ebad]" name="testLongMult" class="com.epam.testng.parameterizedtests.MultLongsTest"/>
        <method signature="MultLongsTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@5419f379]" name="testLongMult" class="com.epam.testng.parameterizedtests.MultLongsTest"/>
        <method signature="MultLongsTest.testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@58651fd0]" name="testLongMult" class="com.epam.testng.parameterizedtests.MultLongsTest"/>
      </group> <!-- multiplication -->
      <group name="power">
        <method signature="BasicPowTest.testPowTwoOfRation()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@57baeedf]" name="testPowTwoOfRation" class="com.epam.testng.basictests.BasicPowTest"/>
        <method signature="PowTest.testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@1794d431]" name="testPower" class="com.epam.testng.parameterizedtests.PowTest"/>
        <method signature="PowTest.testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@39c0f4a]" name="testPower" class="com.epam.testng.parameterizedtests.PowTest"/>
        <method signature="PowTest.testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="testPower" class="com.epam.testng.parameterizedtests.PowTest"/>
        <method signature="PowTest.testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@4883b407]" name="testPower" class="com.epam.testng.parameterizedtests.PowTest"/>
        <method signature="PowTest.testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@7d9d1a19]" name="testPower" class="com.epam.testng.parameterizedtests.PowTest"/>
      </group> <!-- power -->
      <group name="addition">
        <method signature="SumDoublesTest.sumPositiveAndNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@23ceabc1]" name="sumPositiveAndNegativeLongs" class="com.epam.testng.parameterizedtests.SumDoublesTest"/>
        <method signature="SumLongsTest.sumPositiveAndNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@5d5eef3d]" name="sumPositiveAndNegativeLongs" class="com.epam.testng.parameterizedtests.SumLongsTest"/>
      </group> <!-- addition -->
    </groups>
    <test name="AdditionTest" duration-ms="5" started-at="2017-12-15T11:24:13Z" finished-at="2017-12-15T11:24:13Z">
      <class name="com.epam.testng.parameterizedtests.SumLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@5d5eef3d]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:13Z" finished-at="2017-12-15T14:24:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sumPositiveAndNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@5d5eef3d]" name="sumPositiveAndNegativeLongs" duration-ms="1" started-at="2017-12-15T14:24:13Z" data-provider="sumPositiveAndNegativeLongs" finished-at="2017-12-15T14:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-50]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-49]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="sumPositiveAndNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@5d5eef3d]" name="sumPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:24:13Z" data-provider="sumPositiveAndNegativeLongs" finished-at="2017-12-15T14:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483646]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2147483645]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="sumPositiveAndNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@5d5eef3d]" name="sumPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:24:13Z" data-provider="sumPositiveAndNegativeLongs" finished-at="2017-12-15T14:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@5d5eef3d]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:13Z" finished-at="2017-12-15T14:24:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.SumLongsTest -->
      <class name="com.epam.testng.parameterizedtests.SumDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@23ceabc1]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:13Z" finished-at="2017-12-15T14:24:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="sumPositiveAndNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@23ceabc1]" name="sumPositiveAndNegativeLongs" duration-ms="1" started-at="2017-12-15T14:24:13Z" data-provider="sumPositiveAndNegativeDoubles" finished-at="2017-12-15T14:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20.01]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15.45]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4.56]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [4.56] but found [4.560000000000002]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [4.56] but found [4.560000000000002]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.SumDoublesTest.sumPositiveAndNegativeLongs(SumDoublesTest.java:24)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveAndNegativeLongs -->
        <test-method status="FAIL" signature="sumPositiveAndNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@23ceabc1]" name="sumPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:24:13Z" data-provider="sumPositiveAndNegativeDoubles" finished-at="2017-12-15T14:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.14748364666E9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.55]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.14748364511E9]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [2.14748364511E9] but found [2.1474836451100001E9]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [2.14748364511E9] but found [2.1474836451100001E9]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.SumDoublesTest.sumPositiveAndNegativeLongs(SumDoublesTest.java:24)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@23ceabc1]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:13Z" finished-at="2017-12-15T14:24:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="sumPositiveAndNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@23ceabc1]" name="sumPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:24:13Z" data-provider="sumPositiveAndNegativeDoubles" finished-at="2017-12-15T14:24:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-50]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-49.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveAndNegativeLongs -->
      </class> <!-- com.epam.testng.parameterizedtests.SumDoublesTest -->
    </test> <!-- AdditionTest -->
    <test name="SubtractionTest" duration-ms="5" started-at="2017-12-15T11:24:18Z" finished-at="2017-12-15T11:24:18Z">
      <class name="com.epam.testng.parameterizedtests.SubDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@36d4b5c]" name="setUp" is-config="true" duration-ms="2" started-at="2017-12-15T14:24:18Z" finished-at="2017-12-15T14:24:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="subPositiveAndNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@36d4b5c]" name="subPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:24:18Z" data-provider="subPositiveAndNegativeDoubles" finished-at="2017-12-15T14:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20.09]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15.45]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[35.54]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="subPositiveAndNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@36d4b5c]" name="subPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:24:18Z" data-provider="subPositiveAndNegativeDoubles" finished-at="2017-12-15T14:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-50]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[51.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="subPositiveAndNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@36d4b5c]" name="subPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:24:18Z" data-provider="subPositiveAndNegativeDoubles" finished-at="2017-12-15T14:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2.14748364666E9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.55]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.14748364821E9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@36d4b5c]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:18Z" finished-at="2017-12-15T14:24:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.SubDoublesTest -->
      <class name="com.epam.testng.parameterizedtests.SubLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@6d00a15d]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:18Z" finished-at="2017-12-15T14:24:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="subPositiveAndNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@6d00a15d]" name="subPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:24:18Z" data-provider="subPositiveAndNegativeLongs" finished-at="2017-12-15T14:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483646]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="subPositiveAndNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@6d00a15d]" name="subPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:24:18Z" data-provider="subPositiveAndNegativeLongs" finished-at="2017-12-15T14:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[35]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@6d00a15d]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:18Z" finished-at="2017-12-15T14:24:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="subPositiveAndNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@6d00a15d]" name="subPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:24:18Z" data-provider="subPositiveAndNegativeLongs" finished-at="2017-12-15T14:24:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-50]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[51]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveAndNegativeLongs -->
      </class> <!-- com.epam.testng.parameterizedtests.SubLongsTest -->
    </test> <!-- SubtractionTest -->
    <test name="MultiplicationTest" duration-ms="7" started-at="2017-12-15T11:24:23Z" finished-at="2017-12-15T11:24:23Z">
      <class name="com.epam.testng.basictests.BasicMultLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@d2cc05a]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@d2cc05a]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="multNegativeaAndPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@d2cc05a]" name="multNegativeaAndPositiveLongs" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multNegativeaAndPositiveLongs -->
      </class> <!-- com.epam.testng.basictests.BasicMultLongsTest -->
      <class name="com.epam.testng.basictests.BasicMultDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@7dc7cbad]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="multNegativeaAndPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@7dc7cbad]" name="multNegativeaAndPositiveLongs" duration-ms="1" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multNegativeaAndPositiveLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@7dc7cbad]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicMultDoublesTest -->
      <class name="com.epam.testng.parameterizedtests.MultDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@735b5592]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testDoublesMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@62ee68d8]" name="testDoublesMult" duration-ms="1" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result. Please, try again expected [3.03] but found [3.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result. Please, try again expected [3.03] but found [3.0]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.MultDoublesTest.testDoublesMult(MultDoublesTest.java:23)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoublesMult -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@735b5592]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@735b5592]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testDoublesMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@735b5592]" name="testDoublesMult" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result. Please, try again expected [-6.9] but found [-7.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result. Please, try again expected [-6.9] but found [-7.0]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.MultDoublesTest.testDoublesMult(MultDoublesTest.java:23)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoublesMult -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@735b5592]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="FAIL" signature="testDoublesMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@9629756]" name="testDoublesMult" duration-ms="1" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result. Please, try again expected [0.04] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result. Please, try again expected [0.04] but found [0.0]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.MultDoublesTest.testDoublesMult(MultDoublesTest.java:23)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDoublesMult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@735b5592]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.MultDoublesTest@735b5592]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.MultDoublesTest -->
      <class name="com.epam.testng.parameterizedtests.MultLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@5419f379]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@4520ebad]" name="testLongMult" duration-ms="1" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongMult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@5419f379]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@5419f379]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@5419f379]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@5419f379]" name="testLongMult" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongMult -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@5419f379]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@5419f379]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.MultLongsTest@58651fd0]" name="testLongMult" duration-ms="0" started-at="2017-12-15T14:24:23Z" finished-at="2017-12-15T14:24:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongMult -->
      </class> <!-- com.epam.testng.parameterizedtests.MultLongsTest -->
    </test> <!-- MultiplicationTest -->
    <test name="DivisionTest" duration-ms="7" started-at="2017-12-15T11:24:28Z" finished-at="2017-12-15T11:24:28Z">
      <class name="com.epam.testng.parameterizedtests.DivLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@51565ec2]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@51565ec2]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@28feb3fa]" name="testLongDiv" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongDiv -->
        <test-method status="PASS" signature="testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@51565ec2]" name="testLongDiv" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongDiv -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@51565ec2]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@51565ec2]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@675d3402]" name="testLongDiv" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongDiv -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@51565ec2]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.DivLongsTest@51565ec2]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.DivLongsTest -->
      <class name="com.epam.testng.basictests.BasicDivDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@482f8f11]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="divideNegativeAndPositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@482f8f11]" name="divideNegativeAndPositiveValues" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divideNegativeAndPositiveValues -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@482f8f11]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicDivDoublesTest -->
      <class name="com.epam.testng.parameterizedtests.DivDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@68be2bc2]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@68be2bc2]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@20e2cbe0]" name="testLongDiv" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongDiv -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@68be2bc2]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@68be2bc2]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@2a5ca609]" name="testLongDiv" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongDiv -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@68be2bc2]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="testLongDiv()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@68be2bc2]" name="testLongDiv" duration-ms="1" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongDiv -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.DivDoublesTest@68be2bc2]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.DivDoublesTest -->
      <class name="com.epam.testng.basictests.BasicDivLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@1593948d]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="divideNegativeAndPositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@1593948d]" name="divideNegativeAndPositiveValues" duration-ms="1" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divideNegativeAndPositiveValues -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@1593948d]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:28Z" finished-at="2017-12-15T14:24:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicDivLongsTest -->
    </test> <!-- DivisionTest -->
    <test name="CosinusTest" duration-ms="18" started-at="2017-12-15T11:24:33Z" finished-at="2017-12-15T11:24:33Z">
      <class name="com.epam.testng.basictests.BasicCosTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@6767c1fc]" name="setUp" is-config="true" duration-ms="12" started-at="2017-12-15T14:24:33Z" finished-at="2017-12-15T14:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testNegativeAngle()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@6767c1fc]" name="testNegativeAngle" duration-ms="0" started-at="2017-12-15T14:24:33Z" finished-at="2017-12-15T14:24:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [0.9986295347545738] but found [-0.05233595624294383]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [0.9986295347545738] but found [-0.05233595624294383]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicCosTest.testNegativeAngle(BasicCosTest.java:34)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeAngle -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@6767c1fc]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:33Z" finished-at="2017-12-15T14:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicCosTest -->
      <class name="com.epam.testng.parameterizedtests.CosTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@4678c730]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:33Z" finished-at="2017-12-15T14:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@4678c730]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:33Z" finished-at="2017-12-15T14:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="FAIL" signature="testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@39aeed2f]" name="testAngles" duration-ms="0" started-at="2017-12-15T14:24:33Z" finished-at="2017-12-15T14:24:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [-0.9135454576426004] but found [0.4067366430758013]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [-0.9135454576426004] but found [0.4067366430758013]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.CosTest.testAngles(CosTest.java:22)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAngles -->
        <test-method status="FAIL" signature="testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@4678c730]" name="testAngles" duration-ms="1" started-at="2017-12-15T14:24:33Z" finished-at="2017-12-15T14:24:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [0.9999984769132877] but found [0.0017453283658983088]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [0.9999984769132877] but found [0.0017453283658983088]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.CosTest.testAngles(CosTest.java:22)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAngles -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@4678c730]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:33Z" finished-at="2017-12-15T14:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@724af044]" name="testAngles" duration-ms="0" started-at="2017-12-15T14:24:33Z" finished-at="2017-12-15T14:24:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [-0.1736481776669303] but found [-0.984807753012208]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [-0.1736481776669303] but found [-0.984807753012208]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.CosTest.testAngles(CosTest.java:22)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAngles -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@4678c730]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:33Z" finished-at="2017-12-15T14:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@4678c730]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:33Z" finished-at="2017-12-15T14:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.CosTest@4678c730]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:33Z" finished-at="2017-12-15T14:24:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.CosTest -->
    </test> <!-- CosinusTest -->
    <test name="SinusTest" duration-ms="4" started-at="2017-12-15T11:24:38Z" finished-at="2017-12-15T11:24:38Z">
      <class name="com.epam.testng.basictests.BasicSinTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2b98378d]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:38Z" finished-at="2017-12-15T14:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNegativeAngle()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2b98378d]" name="testNegativeAngle" duration-ms="0" started-at="2017-12-15T14:24:38Z" finished-at="2017-12-15T14:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeAngle -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2b98378d]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:38Z" finished-at="2017-12-15T14:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicSinTest -->
      <class name="com.epam.testng.parameterizedtests.SinTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@4b9e13df]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:38Z" finished-at="2017-12-15T14:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@4b9e13df]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:38Z" finished-at="2017-12-15T14:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@18be83e4]" name="testAngles" duration-ms="0" started-at="2017-12-15T14:24:38Z" finished-at="2017-12-15T14:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAngles -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@4b9e13df]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:38Z" finished-at="2017-12-15T14:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@cb5822]" name="testAngles" duration-ms="0" started-at="2017-12-15T14:24:38Z" finished-at="2017-12-15T14:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAngles -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@4b9e13df]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:38Z" finished-at="2017-12-15T14:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@4b9e13df]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:38Z" finished-at="2017-12-15T14:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@4b9e13df]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:38Z" finished-at="2017-12-15T14:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.SinTest@4b9e13df]" name="testAngles" duration-ms="0" started-at="2017-12-15T14:24:38Z" finished-at="2017-12-15T14:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAngles -->
      </class> <!-- com.epam.testng.parameterizedtests.SinTest -->
    </test> <!-- SinusTest -->
    <test name="CotangentTest" duration-ms="5" started-at="2017-12-15T11:24:43Z" finished-at="2017-12-15T11:24:43Z">
      <class name="com.epam.testng.basictests.BasicCtgTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@59fa1d9b]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:43Z" finished-at="2017-12-15T14:24:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@59fa1d9b]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:43Z" finished-at="2017-12-15T14:24:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="FAIL" signature="testNegativeAngle()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@59fa1d9b]" name="testNegativeAngle" duration-ms="0" started-at="2017-12-15T14:24:43Z" finished-at="2017-12-15T14:24:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [-19.081136687728215] but found [-0.05231208078177015]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [-19.081136687728215] but found [-0.05231208078177015]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicCtgTest.testNegativeAngle(BasicCtgTest.java:34)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeAngle -->
      </class> <!-- com.epam.testng.basictests.BasicCtgTest -->
      <class name="com.epam.testng.parameterizedtests.CtgTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@d8355a8]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:43Z" finished-at="2017-12-15T14:24:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@14acaea5]" name="testAngles" duration-ms="0" started-at="2017-12-15T14:24:43Z" finished-at="2017-12-15T14:24:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [-2.246036773904209] but found [0.999999999999895]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [-2.246036773904209] but found [0.999999999999895]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.CtgTest.testAngles(CtgTest.java:22)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAngles -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@d8355a8]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:43Z" finished-at="2017-12-15T14:24:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@d8355a8]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:43Z" finished-at="2017-12-15T14:24:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@d8355a8]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:43Z" finished-at="2017-12-15T14:24:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@46d56d67]" name="testAngles" duration-ms="0" started-at="2017-12-15T14:24:43Z" finished-at="2017-12-15T14:24:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [0.17632698070846492] but found [-0.9408416071039944]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [0.17632698070846492] but found [-0.9408416071039944]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.CtgTest.testAngles(CtgTest.java:22)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAngles -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@d8355a8]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:43Z" finished-at="2017-12-15T14:24:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@d8355a8]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:43Z" finished-at="2017-12-15T14:24:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.CtgTest@d8355a8]" name="testAngles" duration-ms="0" started-at="2017-12-15T14:24:43Z" finished-at="2017-12-15T14:24:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [572.9572133542877] but found [0.0017453274798041774]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [572.9572133542877] but found [0.0017453274798041774]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.CtgTest.testAngles(CtgTest.java:22)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAngles -->
      </class> <!-- com.epam.testng.parameterizedtests.CtgTest -->
    </test> <!-- CotangentTest -->
    <test name="TangentTest" duration-ms="6" started-at="2017-12-15T11:24:48Z" finished-at="2017-12-15T11:24:48Z">
      <class name="com.epam.testng.parameterizedtests.TgTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@5e5792a0]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:48Z" finished-at="2017-12-15T14:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@29774679]" name="testAngles" duration-ms="1" started-at="2017-12-15T14:24:48Z" finished-at="2017-12-15T14:24:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [-0.4452286853085376] but found [0.4067366430758013]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [-0.4452286853085376] but found [0.4067366430758013]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.TgTest.testAngles(TgTest.java:22)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAngles -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@5e5792a0]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:48Z" finished-at="2017-12-15T14:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@5e5792a0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:48Z" finished-at="2017-12-15T14:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@3ffc5af1]" name="testAngles" duration-ms="0" started-at="2017-12-15T14:24:48Z" finished-at="2017-12-15T14:24:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [5.671281819617711] but found [-0.984807753012208]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [5.671281819617711] but found [-0.984807753012208]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.TgTest.testAngles(TgTest.java:22)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAngles -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@5e5792a0]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:48Z" finished-at="2017-12-15T14:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@5e5792a0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:48Z" finished-at="2017-12-15T14:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testAngles()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@5e5792a0]" name="testAngles" duration-ms="0" started-at="2017-12-15T14:24:48Z" finished-at="2017-12-15T14:24:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [0.0017453310241888004] but found [0.0017453283658983088]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [0.0017453310241888004] but found [0.0017453283658983088]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.TgTest.testAngles(TgTest.java:22)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAngles -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.TgTest@5e5792a0]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:48Z" finished-at="2017-12-15T14:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.TgTest -->
      <class name="com.epam.testng.basictests.BasicTgTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@26653222]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:48Z" finished-at="2017-12-15T14:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@26653222]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:48Z" finished-at="2017-12-15T14:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="FAIL" signature="testNegativeAngle()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@26653222]" name="testNegativeAngle" duration-ms="0" started-at="2017-12-15T14:24:48Z" finished-at="2017-12-15T14:24:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [-0.052407779283041196] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [-0.052407779283041196] but found [1.0]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicTgTest.testNegativeAngle(BasicTgTest.java:35)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeAngle -->
      </class> <!-- com.epam.testng.basictests.BasicTgTest -->
    </test> <!-- TangentTest -->
    <test name="NegativesTest" duration-ms="0" started-at="2017-12-15T11:24:53Z" finished-at="2017-12-15T11:24:53Z">
    </test> <!-- NegativesTest -->
    <test name="PositivesTest" duration-ms="0" started-at="2017-12-15T11:24:58Z" finished-at="2017-12-15T11:24:58Z">
    </test> <!-- PositivesTest -->
    <test name="PowerTest" duration-ms="6" started-at="2017-12-15T11:25:03Z" finished-at="2017-12-15T11:25:03Z">
      <class name="com.epam.testng.parameterizedtests.PowTest">
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@1794d431]" name="testPower" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPower -->
        <test-method status="PASS" signature="testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@39c0f4a]" name="testPower" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPower -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="FAIL" signature="testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="testPower" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result. Please, try again. expected [276748.42984267586] but found [53981.8756]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result. Please, try again. expected [276748.42984267586] but found [53981.8756]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.parameterizedtests.PowTest.testPower(PowTest.java:23)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPower -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@7d9d1a19]" name="testPower" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPower -->
        <test-method status="PASS" signature="testPower()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@4883b407]" name="testPower" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPower -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.PowTest@42e26948]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.PowTest -->
      <class name="com.epam.testng.basictests.BasicPowTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@57baeedf]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testPowTwoOfRation()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@57baeedf]" name="testPowTwoOfRation" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [5.5225] but found [5.522500000000001]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [5.5225] but found [5.522500000000001]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at org.testng.Assert.assertEquals(Assert.java:442)at com.epam.testng.basictests.BasicPowTest.testPowTwoOfRation(BasicPowTest.java:32)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPowTwoOfRation -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@57baeedf]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:03Z" finished-at="2017-12-15T14:25:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicPowTest -->
    </test> <!-- PowerTest -->
    <test name="SquareRootTest" duration-ms="5" started-at="2017-12-15T11:25:08Z" finished-at="2017-12-15T11:25:08Z">
      <class name="com.epam.testng.basictests.BasicSqrtTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@e25b2fe]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:08Z" finished-at="2017-12-15T14:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@e25b2fe]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:08Z" finished-at="2017-12-15T14:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="FAIL" signature="testNegativeNumbers()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@e25b2fe]" name="testNegativeNumbers" duration-ms="0" started-at="2017-12-15T14:25:08Z" finished-at="2017-12-15T14:25:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [true] but found [false]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertTrue(Assert.java:44)at com.epam.testng.basictests.BasicSqrtTest.testNegativeNumbers(BasicSqrtTest.java:20)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeNumbers -->
      </class> <!-- com.epam.testng.basictests.BasicSqrtTest -->
      <class name="com.epam.testng.parameterizedtests.SqrtTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@204f30ec]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:08Z" finished-at="2017-12-15T14:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@204f30ec]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:08Z" finished-at="2017-12-15T14:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@204f30ec]" name="testLongMult" duration-ms="0" started-at="2017-12-15T14:25:08Z" finished-at="2017-12-15T14:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongMult -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@204f30ec]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:08Z" finished-at="2017-12-15T14:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@4667ae56]" name="testLongMult" duration-ms="0" started-at="2017-12-15T14:25:08Z" finished-at="2017-12-15T14:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongMult -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@204f30ec]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:08Z" finished-at="2017-12-15T14:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@204f30ec]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:08Z" finished-at="2017-12-15T14:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testLongMult()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@77cd7a0]" name="testLongMult" duration-ms="0" started-at="2017-12-15T14:25:08Z" finished-at="2017-12-15T14:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLongMult -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SqrtTest@204f30ec]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:25:08Z" finished-at="2017-12-15T14:25:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.SqrtTest -->
    </test> <!-- SquareRootTest -->
  </suite> <!-- Extended -->
  <suite name="Smoke" duration-ms="55287" started-at="2017-12-15T11:22:12Z" finished-at="2017-12-15T11:23:08Z">
    <groups>
      <group name="negatives">
        <method signature="BasicNegativeNumbersTest.checkValueNegative()[pri:0, instance:com.epam.testng.basictests.BasicNegativeNumbersTest@3d24753a]" name="checkValueNegative" class="com.epam.testng.basictests.BasicNegativeNumbersTest"/>
        <method signature="BasicNegativeNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.basictests.BasicNegativeNumbersTest@3d24753a]" name="checkValuePositive" class="com.epam.testng.basictests.BasicNegativeNumbersTest"/>
        <method signature="BasicNegativeNumbersTest.checkZero()[pri:0, instance:com.epam.testng.basictests.BasicNegativeNumbersTest@3d24753a]" name="checkZero" class="com.epam.testng.basictests.BasicNegativeNumbersTest"/>
      </group> <!-- negatives -->
      <group name="cos">
        <method signature="BasicCosTest.testAnotherAngle()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@5a39699c]" name="testAnotherAngle" class="com.epam.testng.basictests.BasicCosTest"/>
        <method signature="BasicCosTest.testZeroAngle()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@5a39699c]" name="testZeroAngle" class="com.epam.testng.basictests.BasicCosTest"/>
      </group> <!-- cos -->
      <group name="smoke">
        <method signature="BasicSumDoublesTest.sumNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="sumNegativeLongs" class="com.epam.testng.basictests.BasicSumDoublesTest"/>
        <method signature="BasicSumDoublesTest.sumPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="sumPositiveAndNegativeLongs" class="com.epam.testng.basictests.BasicSumDoublesTest"/>
        <method signature="BasicSumDoublesTest.sumPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="sumPositiveLongs" class="com.epam.testng.basictests.BasicSumDoublesTest"/>
        <method signature="BasicSumLongsTest.sumNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="sumNegativeLongs" class="com.epam.testng.basictests.BasicSumLongsTest"/>
        <method signature="BasicSumLongsTest.sumPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="sumPositiveAndNegativeLongs" class="com.epam.testng.basictests.BasicSumLongsTest"/>
        <method signature="BasicSumLongsTest.sumPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="sumPositiveLongs" class="com.epam.testng.basictests.BasicSumLongsTest"/>
        <method signature="SumDoublesTest.sumNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@18e8568]" name="sumNegativeLongs" class="com.epam.testng.parameterizedtests.SumDoublesTest"/>
        <method signature="SumLongsTest.sumNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@33e5ccce]" name="sumNegativeLongs" class="com.epam.testng.parameterizedtests.SumLongsTest"/>
        <method signature="BasicSubDoublesTest.subNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="subNegativeLongs" class="com.epam.testng.basictests.BasicSubDoublesTest"/>
        <method signature="BasicSubDoublesTest.subPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="subPositiveAndNegativeLongs" class="com.epam.testng.basictests.BasicSubDoublesTest"/>
        <method signature="BasicSubDoublesTest.subPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="subPositiveLongs" class="com.epam.testng.basictests.BasicSubDoublesTest"/>
        <method signature="BasicSubLongsTest.subNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="subNegativeLongs" class="com.epam.testng.basictests.BasicSubLongsTest"/>
        <method signature="BasicSubLongsTest.subPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="subPositiveAndNegativeLongs" class="com.epam.testng.basictests.BasicSubLongsTest"/>
        <method signature="BasicSubLongsTest.subPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="subPositiveLongs" class="com.epam.testng.basictests.BasicSubLongsTest"/>
        <method signature="SubDoublesTest.suNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@13b6d03]" name="suNegativeLongs" class="com.epam.testng.parameterizedtests.SubDoublesTest"/>
        <method signature="SubLongsTest.subNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@f5f2bb7]" name="subNegativeLongs" class="com.epam.testng.parameterizedtests.SubLongsTest"/>
        <method signature="BasicMultDoublesTest.multPositiveDoubles()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@d7b1517]" name="multPositiveDoubles" class="com.epam.testng.basictests.BasicMultDoublesTest"/>
        <method signature="BasicMultLongsTest.multPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@16c0663d]" name="multPositiveLongs" class="com.epam.testng.basictests.BasicMultLongsTest"/>
        <method signature="BasicDivDoublesTest.divideByZero()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@7cf10a6f]" name="divideByZero" class="com.epam.testng.basictests.BasicDivDoublesTest"/>
        <method signature="BasicDivDoublesTest.dividePositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@7cf10a6f]" name="dividePositiveValues" class="com.epam.testng.basictests.BasicDivDoublesTest"/>
        <method signature="BasicDivLongsTest.checkDivisionByZeroThrowsException()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@7e0babb1]" name="checkDivisionByZeroThrowsException" class="com.epam.testng.basictests.BasicDivLongsTest"/>
        <method signature="BasicDivLongsTest.dividePositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@7e0babb1]" name="dividePositiveValues" class="com.epam.testng.basictests.BasicDivLongsTest"/>
        <method signature="BasicCosTest.testAnotherAngle()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@5a39699c]" name="testAnotherAngle" class="com.epam.testng.basictests.BasicCosTest"/>
        <method signature="BasicCosTest.testZeroAngle()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@5a39699c]" name="testZeroAngle" class="com.epam.testng.basictests.BasicCosTest"/>
        <method signature="BasicSinTest.testAnotherAngle()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2752f6e2]" name="testAnotherAngle" class="com.epam.testng.basictests.BasicSinTest"/>
        <method signature="BasicSinTest.testZeroAngle()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2752f6e2]" name="testZeroAngle" class="com.epam.testng.basictests.BasicSinTest"/>
        <method signature="BasicCtgTest.testAnotherAngle()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@2133c8f8]" name="testAnotherAngle" class="com.epam.testng.basictests.BasicCtgTest"/>
        <method signature="BasicCtgTest.testZeroAngle()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@2133c8f8]" name="testZeroAngle" class="com.epam.testng.basictests.BasicCtgTest"/>
        <method signature="BasicTgTest.testAnotherAngle()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@880ec60]" name="testAnotherAngle" class="com.epam.testng.basictests.BasicTgTest"/>
        <method signature="BasicTgTest.testZeroAngle()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@880ec60]" name="testZeroAngle" class="com.epam.testng.basictests.BasicTgTest"/>
        <method signature="BasicNegativeNumbersTest.checkValueNegative()[pri:0, instance:com.epam.testng.basictests.BasicNegativeNumbersTest@3d24753a]" name="checkValueNegative" class="com.epam.testng.basictests.BasicNegativeNumbersTest"/>
        <method signature="BasicNegativeNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.basictests.BasicNegativeNumbersTest@3d24753a]" name="checkValuePositive" class="com.epam.testng.basictests.BasicNegativeNumbersTest"/>
        <method signature="BasicNegativeNumbersTest.checkZero()[pri:0, instance:com.epam.testng.basictests.BasicNegativeNumbersTest@3d24753a]" name="checkZero" class="com.epam.testng.basictests.BasicNegativeNumbersTest"/>
        <method signature="BasicPositiveNumbersTest.checkValueNegative()[pri:0, instance:com.epam.testng.basictests.BasicPositiveNumbersTest@4411d970]" name="checkValueNegative" class="com.epam.testng.basictests.BasicPositiveNumbersTest"/>
        <method signature="BasicPositiveNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.basictests.BasicPositiveNumbersTest@4411d970]" name="checkValuePositive" class="com.epam.testng.basictests.BasicPositiveNumbersTest"/>
        <method signature="BasicPositiveNumbersTest.checkZero()[pri:0, instance:com.epam.testng.basictests.BasicPositiveNumbersTest@4411d970]" name="checkZero" class="com.epam.testng.basictests.BasicPositiveNumbersTest"/>
        <method signature="BasicPowTest.testPowOne()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@13969fbe]" name="testPowOne" class="com.epam.testng.basictests.BasicPowTest"/>
        <method signature="BasicPowTest.testPowTwo()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@13969fbe]" name="testPowTwo" class="com.epam.testng.basictests.BasicPowTest"/>
        <method signature="BasicSqrtTest.testPositiveNumbers()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@3fb6a447]" name="testPositiveNumbers" class="com.epam.testng.basictests.BasicSqrtTest"/>
      </group> <!-- smoke -->
      <group name="squareRoot">
        <method signature="BasicSqrtTest.testPositiveNumbers()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@3fb6a447]" name="testPositiveNumbers" class="com.epam.testng.basictests.BasicSqrtTest"/>
      </group> <!-- squareRoot -->
      <group name="subtraction">
        <method signature="BasicSubDoublesTest.subNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="subNegativeLongs" class="com.epam.testng.basictests.BasicSubDoublesTest"/>
        <method signature="BasicSubDoublesTest.subPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="subPositiveAndNegativeLongs" class="com.epam.testng.basictests.BasicSubDoublesTest"/>
        <method signature="BasicSubDoublesTest.subPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="subPositiveLongs" class="com.epam.testng.basictests.BasicSubDoublesTest"/>
        <method signature="BasicSubLongsTest.subNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="subNegativeLongs" class="com.epam.testng.basictests.BasicSubLongsTest"/>
        <method signature="BasicSubLongsTest.subPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="subPositiveAndNegativeLongs" class="com.epam.testng.basictests.BasicSubLongsTest"/>
        <method signature="BasicSubLongsTest.subPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="subPositiveLongs" class="com.epam.testng.basictests.BasicSubLongsTest"/>
        <method signature="SubDoublesTest.suNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@13b6d03]" name="suNegativeLongs" class="com.epam.testng.parameterizedtests.SubDoublesTest"/>
        <method signature="SubLongsTest.subNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@f5f2bb7]" name="subNegativeLongs" class="com.epam.testng.parameterizedtests.SubLongsTest"/>
      </group> <!-- subtraction -->
      <group name="division">
        <method signature="BasicDivDoublesTest.divideByZero()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@7cf10a6f]" name="divideByZero" class="com.epam.testng.basictests.BasicDivDoublesTest"/>
        <method signature="BasicDivDoublesTest.dividePositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@7cf10a6f]" name="dividePositiveValues" class="com.epam.testng.basictests.BasicDivDoublesTest"/>
        <method signature="BasicDivLongsTest.checkDivisionByZeroThrowsException()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@7e0babb1]" name="checkDivisionByZeroThrowsException" class="com.epam.testng.basictests.BasicDivLongsTest"/>
        <method signature="BasicDivLongsTest.dividePositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@7e0babb1]" name="dividePositiveValues" class="com.epam.testng.basictests.BasicDivLongsTest"/>
      </group> <!-- division -->
      <group name="longs">
        <method signature="BasicSumLongsTest.sumNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="sumNegativeLongs" class="com.epam.testng.basictests.BasicSumLongsTest"/>
        <method signature="BasicSumLongsTest.sumPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="sumPositiveAndNegativeLongs" class="com.epam.testng.basictests.BasicSumLongsTest"/>
        <method signature="BasicSumLongsTest.sumPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="sumPositiveLongs" class="com.epam.testng.basictests.BasicSumLongsTest"/>
        <method signature="SumLongsTest.sumNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@33e5ccce]" name="sumNegativeLongs" class="com.epam.testng.parameterizedtests.SumLongsTest"/>
        <method signature="BasicSubLongsTest.subNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="subNegativeLongs" class="com.epam.testng.basictests.BasicSubLongsTest"/>
        <method signature="BasicSubLongsTest.subPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="subPositiveAndNegativeLongs" class="com.epam.testng.basictests.BasicSubLongsTest"/>
        <method signature="BasicSubLongsTest.subPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="subPositiveLongs" class="com.epam.testng.basictests.BasicSubLongsTest"/>
        <method signature="SubLongsTest.subNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@f5f2bb7]" name="subNegativeLongs" class="com.epam.testng.parameterizedtests.SubLongsTest"/>
        <method signature="BasicMultLongsTest.multPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@16c0663d]" name="multPositiveLongs" class="com.epam.testng.basictests.BasicMultLongsTest"/>
        <method signature="BasicDivLongsTest.checkDivisionByZeroThrowsException()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@7e0babb1]" name="checkDivisionByZeroThrowsException" class="com.epam.testng.basictests.BasicDivLongsTest"/>
        <method signature="BasicDivLongsTest.dividePositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@7e0babb1]" name="dividePositiveValues" class="com.epam.testng.basictests.BasicDivLongsTest"/>
      </group> <!-- longs -->
      <group name="tg">
        <method signature="BasicTgTest.testAnotherAngle()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@880ec60]" name="testAnotherAngle" class="com.epam.testng.basictests.BasicTgTest"/>
        <method signature="BasicTgTest.testZeroAngle()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@880ec60]" name="testZeroAngle" class="com.epam.testng.basictests.BasicTgTest"/>
      </group> <!-- tg -->
      <group name="doubles">
        <method signature="BasicSumDoublesTest.sumNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="sumNegativeLongs" class="com.epam.testng.basictests.BasicSumDoublesTest"/>
        <method signature="BasicSumDoublesTest.sumPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="sumPositiveAndNegativeLongs" class="com.epam.testng.basictests.BasicSumDoublesTest"/>
        <method signature="BasicSumDoublesTest.sumPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="sumPositiveLongs" class="com.epam.testng.basictests.BasicSumDoublesTest"/>
        <method signature="SumDoublesTest.sumNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@18e8568]" name="sumNegativeLongs" class="com.epam.testng.parameterizedtests.SumDoublesTest"/>
        <method signature="BasicSubDoublesTest.subNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="subNegativeLongs" class="com.epam.testng.basictests.BasicSubDoublesTest"/>
        <method signature="BasicSubDoublesTest.subPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="subPositiveAndNegativeLongs" class="com.epam.testng.basictests.BasicSubDoublesTest"/>
        <method signature="BasicSubDoublesTest.subPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="subPositiveLongs" class="com.epam.testng.basictests.BasicSubDoublesTest"/>
        <method signature="SubDoublesTest.suNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@13b6d03]" name="suNegativeLongs" class="com.epam.testng.parameterizedtests.SubDoublesTest"/>
        <method signature="BasicMultDoublesTest.multPositiveDoubles()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@d7b1517]" name="multPositiveDoubles" class="com.epam.testng.basictests.BasicMultDoublesTest"/>
        <method signature="BasicDivDoublesTest.divideByZero()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@7cf10a6f]" name="divideByZero" class="com.epam.testng.basictests.BasicDivDoublesTest"/>
        <method signature="BasicDivDoublesTest.dividePositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@7cf10a6f]" name="dividePositiveValues" class="com.epam.testng.basictests.BasicDivDoublesTest"/>
      </group> <!-- doubles -->
      <group name="ctg">
        <method signature="BasicCtgTest.testAnotherAngle()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@2133c8f8]" name="testAnotherAngle" class="com.epam.testng.basictests.BasicCtgTest"/>
        <method signature="BasicCtgTest.testZeroAngle()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@2133c8f8]" name="testZeroAngle" class="com.epam.testng.basictests.BasicCtgTest"/>
      </group> <!-- ctg -->
      <group name="sin">
        <method signature="BasicSinTest.testAnotherAngle()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2752f6e2]" name="testAnotherAngle" class="com.epam.testng.basictests.BasicSinTest"/>
        <method signature="BasicSinTest.testZeroAngle()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2752f6e2]" name="testZeroAngle" class="com.epam.testng.basictests.BasicSinTest"/>
      </group> <!-- sin -->
      <group name="positives">
        <method signature="BasicPositiveNumbersTest.checkValueNegative()[pri:0, instance:com.epam.testng.basictests.BasicPositiveNumbersTest@4411d970]" name="checkValueNegative" class="com.epam.testng.basictests.BasicPositiveNumbersTest"/>
        <method signature="BasicPositiveNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.basictests.BasicPositiveNumbersTest@4411d970]" name="checkValuePositive" class="com.epam.testng.basictests.BasicPositiveNumbersTest"/>
        <method signature="BasicPositiveNumbersTest.checkZero()[pri:0, instance:com.epam.testng.basictests.BasicPositiveNumbersTest@4411d970]" name="checkZero" class="com.epam.testng.basictests.BasicPositiveNumbersTest"/>
      </group> <!-- positives -->
      <group name="multiplication">
        <method signature="BasicMultDoublesTest.multPositiveDoubles()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@d7b1517]" name="multPositiveDoubles" class="com.epam.testng.basictests.BasicMultDoublesTest"/>
        <method signature="BasicMultLongsTest.multPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@16c0663d]" name="multPositiveLongs" class="com.epam.testng.basictests.BasicMultLongsTest"/>
      </group> <!-- multiplication -->
      <group name="power">
        <method signature="BasicPowTest.testPowOne()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@13969fbe]" name="testPowOne" class="com.epam.testng.basictests.BasicPowTest"/>
        <method signature="BasicPowTest.testPowTwo()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@13969fbe]" name="testPowTwo" class="com.epam.testng.basictests.BasicPowTest"/>
      </group> <!-- power -->
      <group name="addition">
        <method signature="BasicSumDoublesTest.sumNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="sumNegativeLongs" class="com.epam.testng.basictests.BasicSumDoublesTest"/>
        <method signature="BasicSumDoublesTest.sumPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="sumPositiveAndNegativeLongs" class="com.epam.testng.basictests.BasicSumDoublesTest"/>
        <method signature="BasicSumDoublesTest.sumPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="sumPositiveLongs" class="com.epam.testng.basictests.BasicSumDoublesTest"/>
        <method signature="BasicSumLongsTest.sumNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="sumNegativeLongs" class="com.epam.testng.basictests.BasicSumLongsTest"/>
        <method signature="BasicSumLongsTest.sumPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="sumPositiveAndNegativeLongs" class="com.epam.testng.basictests.BasicSumLongsTest"/>
        <method signature="BasicSumLongsTest.sumPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="sumPositiveLongs" class="com.epam.testng.basictests.BasicSumLongsTest"/>
        <method signature="SumDoublesTest.sumNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@18e8568]" name="sumNegativeLongs" class="com.epam.testng.parameterizedtests.SumDoublesTest"/>
        <method signature="SumLongsTest.sumNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@33e5ccce]" name="sumNegativeLongs" class="com.epam.testng.parameterizedtests.SumLongsTest"/>
      </group> <!-- addition -->
    </groups>
    <test name="AdditionTest" duration-ms="43" started-at="2017-12-15T11:22:12Z" finished-at="2017-12-15T11:22:12Z">
      <class name="com.epam.testng.basictests.BasicSumLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="setUp" is-config="true" duration-ms="6" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sumNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="sumNegativeLongs" duration-ms="3" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumNegativeLongs -->
        <test-method status="PASS" signature="sumPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="sumPositiveLongs" duration-ms="1" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveLongs -->
        <test-method status="PASS" signature="sumPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="sumPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicSumLongsTest@1c2c22f3]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicSumLongsTest -->
      <class name="com.epam.testng.parameterizedtests.SumLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@33e5ccce]" name="setUp" is-config="true" duration-ms="4" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sumNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@33e5ccce]" name="sumNegativeLongs" duration-ms="3" started-at="2017-12-15T14:22:12Z" data-provider="sumNegativeLongs" finished-at="2017-12-15T14:22:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-35]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumNegativeLongs -->
        <test-method status="PASS" signature="sumNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@33e5ccce]" name="sumNegativeLongs" duration-ms="1" started-at="2017-12-15T14:22:12Z" data-provider="sumNegativeLongs" finished-at="2017-12-15T14:22:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-50]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumNegativeLongs -->
        <test-method status="PASS" signature="sumNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@33e5ccce]" name="sumNegativeLongs" duration-ms="0" started-at="2017-12-15T14:22:12Z" data-provider="sumNegativeLongs" finished-at="2017-12-15T14:22:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2147483646]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@33e5ccce]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.SumLongsTest -->
      <class name="com.epam.testng.parameterizedtests.SumDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@18e8568]" name="setUp" is-config="true" duration-ms="4" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sumNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@18e8568]" name="sumNegativeLongs" duration-ms="2" started-at="2017-12-15T14:22:12Z" data-provider="sumNegativeDoubles" finished-at="2017-12-15T14:22:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.56]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-3.56]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumNegativeLongs -->
        <test-method status="PASS" signature="sumNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@18e8568]" name="sumNegativeLongs" duration-ms="0" started-at="2017-12-15T14:22:12Z" data-provider="sumNegativeDoubles" finished-at="2017-12-15T14:22:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.7976931348623157E308]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1.7976931348623157E308]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumNegativeLongs -->
        <test-method status="PASS" signature="sumNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@18e8568]" name="sumNegativeLongs" duration-ms="1" started-at="2017-12-15T14:22:12Z" data-provider="sumNegativeDoubles" finished-at="2017-12-15T14:22:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-50]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-50.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@18e8568]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.SumDoublesTest -->
      <class name="com.epam.testng.basictests.BasicSumDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="setUp" is-config="true" duration-ms="9" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sumNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="sumNegativeLongs" duration-ms="2" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumNegativeLongs -->
        <test-method status="PASS" signature="sumPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="sumPositiveAndNegativeLongs" duration-ms="1" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="sumPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSumDoublesTest@46f5f779]" name="sumPositiveLongs" duration-ms="0" started-at="2017-12-15T14:22:12Z" finished-at="2017-12-15T14:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveLongs -->
      </class> <!-- com.epam.testng.basictests.BasicSumDoublesTest -->
    </test> <!-- AdditionTest -->
    <test name="SubtractionTest" duration-ms="12" started-at="2017-12-15T11:22:17Z" finished-at="2017-12-15T11:22:17Z">
      <class name="com.epam.testng.basictests.BasicSubLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="subNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="subNegativeLongs" duration-ms="0" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subNegativeLongs -->
        <test-method status="PASS" signature="subPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="subPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="subPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="subPositiveLongs" duration-ms="0" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicSubLongsTest@282ba1e]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicSubLongsTest -->
      <class name="com.epam.testng.basictests.BasicSubDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="subPositiveAndNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="subPositiveAndNegativeLongs" duration-ms="0" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveAndNegativeLongs -->
        <test-method status="PASS" signature="subNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="subNegativeLongs" duration-ms="0" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="subPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicSubDoublesTest@75412c2f]" name="subPositiveLongs" duration-ms="0" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveLongs -->
      </class> <!-- com.epam.testng.basictests.BasicSubDoublesTest -->
      <class name="com.epam.testng.parameterizedtests.SubDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@13b6d03]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="suNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@13b6d03]" name="suNegativeLongs" duration-ms="0" started-at="2017-12-15T14:22:17Z" data-provider="subNegativeDoubles" finished-at="2017-12-15T14:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.7976931348623157]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-0.7976931348623157]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suNegativeLongs -->
        <test-method status="PASS" signature="suNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@13b6d03]" name="suNegativeLongs" duration-ms="1" started-at="2017-12-15T14:22:17Z" data-provider="subNegativeDoubles" finished-at="2017-12-15T14:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-50]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-50.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suNegativeLongs -->
        <test-method status="PASS" signature="suNegativeLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@13b6d03]" name="suNegativeLongs" duration-ms="0" started-at="2017-12-15T14:22:17Z" data-provider="subNegativeDoubles" finished-at="2017-12-15T14:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2.56]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.56]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@13b6d03]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.SubDoublesTest -->
      <class name="com.epam.testng.parameterizedtests.SubLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@f5f2bb7]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="subNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@f5f2bb7]" name="subNegativeLongs" duration-ms="0" started-at="2017-12-15T14:22:17Z" data-provider="subNegativeLongs" finished-at="2017-12-15T14:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-15]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subNegativeLongs -->
        <test-method status="PASS" signature="subNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@f5f2bb7]" name="subNegativeLongs" duration-ms="0" started-at="2017-12-15T14:22:17Z" data-provider="subNegativeLongs" finished-at="2017-12-15T14:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2147483646]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-2147483645]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subNegativeLongs -->
        <test-method status="PASS" signature="subNegativeLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@f5f2bb7]" name="subNegativeLongs" duration-ms="1" started-at="2017-12-15T14:22:17Z" data-provider="subNegativeLongs" finished-at="2017-12-15T14:22:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-50]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-50]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@f5f2bb7]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:22:17Z" finished-at="2017-12-15T14:22:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.SubLongsTest -->
    </test> <!-- SubtractionTest -->
    <test name="MultiplicationTest" duration-ms="4" started-at="2017-12-15T11:22:22Z" finished-at="2017-12-15T11:22:22Z">
      <class name="com.epam.testng.basictests.BasicMultLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@16c0663d]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:22Z" finished-at="2017-12-15T14:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="multPositiveLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@16c0663d]" name="multPositiveLongs" duration-ms="1" started-at="2017-12-15T14:22:22Z" finished-at="2017-12-15T14:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multPositiveLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@16c0663d]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:22Z" finished-at="2017-12-15T14:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicMultLongsTest -->
      <class name="com.epam.testng.basictests.BasicMultDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@d7b1517]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:22:22Z" finished-at="2017-12-15T14:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="multPositiveDoubles()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@d7b1517]" name="multPositiveDoubles" duration-ms="1" started-at="2017-12-15T14:22:22Z" finished-at="2017-12-15T14:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multPositiveDoubles -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@d7b1517]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:22Z" finished-at="2017-12-15T14:22:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicMultDoublesTest -->
    </test> <!-- MultiplicationTest -->
    <test name="DivisionTest" duration-ms="5" started-at="2017-12-15T11:22:27Z" finished-at="2017-12-15T11:22:27Z">
      <class name="com.epam.testng.basictests.BasicDivDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@7cf10a6f]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:27Z" finished-at="2017-12-15T14:22:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="divideByZero()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@7cf10a6f]" name="divideByZero" duration-ms="0" started-at="2017-12-15T14:22:27Z" finished-at="2017-12-15T14:22:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divideByZero -->
        <test-method status="PASS" signature="dividePositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@7cf10a6f]" name="dividePositiveValues" duration-ms="0" started-at="2017-12-15T14:22:27Z" finished-at="2017-12-15T14:22:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dividePositiveValues -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@7cf10a6f]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:27Z" finished-at="2017-12-15T14:22:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicDivDoublesTest -->
      <class name="com.epam.testng.basictests.BasicDivLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@7e0babb1]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:27Z" finished-at="2017-12-15T14:22:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkDivisionByZeroThrowsException()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@7e0babb1]" name="checkDivisionByZeroThrowsException" duration-ms="0" started-at="2017-12-15T14:22:27Z" finished-at="2017-12-15T14:22:27Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zeroat com.epam.tat.module4.Calculator.div(Calculator.java:34)at com.epam.testng.basictests.BasicDivLongsTest.checkDivisionByZeroThrowsException(BasicDivLongsTest.java:30)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkDivisionByZeroThrowsException -->
        <test-method status="FAIL" signature="dividePositiveValues()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@7e0babb1]" name="dividePositiveValues" duration-ms="1" started-at="2017-12-15T14:22:27Z" finished-at="2017-12-15T14:22:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid result of operation expected [2.666666666666667] but found [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid result of operation expected [2.666666666666667] but found [2]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicDivLongsTest.dividePositiveValues(BasicDivLongsTest.java:12)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dividePositiveValues -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@7e0babb1]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:22:27Z" finished-at="2017-12-15T14:22:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicDivLongsTest -->
    </test> <!-- DivisionTest -->
    <test name="CosinusTest" duration-ms="4" started-at="2017-12-15T11:22:32Z" finished-at="2017-12-15T11:22:32Z">
      <class name="com.epam.testng.basictests.BasicCosTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@5a39699c]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:22:32Z" finished-at="2017-12-15T14:22:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testAnotherAngle()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@5a39699c]" name="testAnotherAngle" duration-ms="0" started-at="2017-12-15T14:22:32Z" finished-at="2017-12-15T14:22:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [-0.3420201433256694] but found [-0.9396926207859082]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [-0.3420201433256694] but found [-0.9396926207859082]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicCosTest.testAnotherAngle(BasicCosTest.java:20)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnotherAngle -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@5a39699c]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:32Z" finished-at="2017-12-15T14:22:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="FAIL" signature="testZeroAngle()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@5a39699c]" name="testZeroAngle" duration-ms="0" started-at="2017-12-15T14:22:32Z" finished-at="2017-12-15T14:22:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [1.0] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [1.0] but found [0.0]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicCosTest.testZeroAngle(BasicCosTest.java:13)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroAngle -->
      </class> <!-- com.epam.testng.basictests.BasicCosTest -->
    </test> <!-- CosinusTest -->
    <test name="SinusTest" duration-ms="7" started-at="2017-12-15T11:22:37Z" finished-at="2017-12-15T11:22:37Z">
      <class name="com.epam.testng.basictests.BasicSinTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2752f6e2]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:37Z" finished-at="2017-12-15T14:22:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAnotherAngle()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2752f6e2]" name="testAnotherAngle" duration-ms="1" started-at="2017-12-15T14:22:37Z" finished-at="2017-12-15T14:22:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnotherAngle -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2752f6e2]" name="printOnFinish" is-config="true" duration-ms="4" started-at="2017-12-15T14:22:37Z" finished-at="2017-12-15T14:22:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="testZeroAngle()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@2752f6e2]" name="testZeroAngle" duration-ms="0" started-at="2017-12-15T14:22:37Z" finished-at="2017-12-15T14:22:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroAngle -->
      </class> <!-- com.epam.testng.basictests.BasicSinTest -->
    </test> <!-- SinusTest -->
    <test name="CotangentTest" duration-ms="4" started-at="2017-12-15T11:22:43Z" finished-at="2017-12-15T11:22:43Z">
      <class name="com.epam.testng.basictests.BasicCtgTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@2133c8f8]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:43Z" finished-at="2017-12-15T14:22:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testAnotherAngle()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@2133c8f8]" name="testAnotherAngle" duration-ms="0" started-at="2017-12-15T14:22:43Z" finished-at="2017-12-15T14:22:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [0.363970234266202] but found [0.9996756415322439]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [0.363970234266202] but found [0.9996756415322439]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicCtgTest.testAnotherAngle(BasicCtgTest.java:20)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnotherAngle -->
        <test-method status="FAIL" signature="testZeroAngle()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@2133c8f8]" name="testZeroAngle" duration-ms="1" started-at="2017-12-15T14:22:43Z" finished-at="2017-12-15T14:22:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [Infinity] but found [0.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [Infinity] but found [0.0]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicCtgTest.testZeroAngle(BasicCtgTest.java:13)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroAngle -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@2133c8f8]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:43Z" finished-at="2017-12-15T14:22:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicCtgTest -->
    </test> <!-- CotangentTest -->
    <test name="TangentTest" duration-ms="5" started-at="2017-12-15T11:22:48Z" finished-at="2017-12-15T11:22:48Z">
      <class name="com.epam.testng.basictests.BasicTgTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@880ec60]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:22:48Z" finished-at="2017-12-15T14:22:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testAnotherAngle()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@880ec60]" name="testAnotherAngle" duration-ms="0" started-at="2017-12-15T14:22:48Z" finished-at="2017-12-15T14:22:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [2.7474774194546168] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [2.7474774194546168] but found [1.0]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicTgTest.testAnotherAngle(BasicTgTest.java:21)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAnotherAngle -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@880ec60]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:22:48Z" finished-at="2017-12-15T14:22:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="FAIL" signature="testZeroAngle()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@880ec60]" name="testZeroAngle" duration-ms="0" started-at="2017-12-15T14:22:48Z" finished-at="2017-12-15T14:22:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [0.0] but found [NaN]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [0.0] but found [NaN]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicTgTest.testZeroAngle(BasicTgTest.java:14)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZeroAngle -->
      </class> <!-- com.epam.testng.basictests.BasicTgTest -->
    </test> <!-- TangentTest -->
    <test name="NegativesTest" duration-ms="4" started-at="2017-12-15T11:22:53Z" finished-at="2017-12-15T11:22:53Z">
      <class name="com.epam.testng.basictests.BasicNegativeNumbersTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicNegativeNumbersTest@3d24753a]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:22:53Z" finished-at="2017-12-15T14:22:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkValueNegative()[pri:0, instance:com.epam.testng.basictests.BasicNegativeNumbersTest@3d24753a]" name="checkValueNegative" duration-ms="0" started-at="2017-12-15T14:22:53Z" finished-at="2017-12-15T14:22:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValueNegative -->
        <test-method status="PASS" signature="checkValuePositive()[pri:0, instance:com.epam.testng.basictests.BasicNegativeNumbersTest@3d24753a]" name="checkValuePositive" duration-ms="0" started-at="2017-12-15T14:22:53Z" finished-at="2017-12-15T14:22:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValuePositive -->
        <test-method status="PASS" signature="checkZero()[pri:0, instance:com.epam.testng.basictests.BasicNegativeNumbersTest@3d24753a]" name="checkZero" duration-ms="0" started-at="2017-12-15T14:22:53Z" finished-at="2017-12-15T14:22:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkZero -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicNegativeNumbersTest@3d24753a]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:53Z" finished-at="2017-12-15T14:22:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicNegativeNumbersTest -->
    </test> <!-- NegativesTest -->
    <test name="PositivesTest" duration-ms="3" started-at="2017-12-15T11:22:58Z" finished-at="2017-12-15T11:22:58Z">
      <class name="com.epam.testng.basictests.BasicPositiveNumbersTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicPositiveNumbersTest@4411d970]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:58Z" finished-at="2017-12-15T14:22:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkValueNegative()[pri:0, instance:com.epam.testng.basictests.BasicPositiveNumbersTest@4411d970]" name="checkValueNegative" duration-ms="1" started-at="2017-12-15T14:22:58Z" finished-at="2017-12-15T14:22:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValueNegative -->
        <test-method status="PASS" signature="checkZero()[pri:0, instance:com.epam.testng.basictests.BasicPositiveNumbersTest@4411d970]" name="checkZero" duration-ms="0" started-at="2017-12-15T14:22:58Z" finished-at="2017-12-15T14:22:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkZero -->
        <test-method status="PASS" signature="checkValuePositive()[pri:0, instance:com.epam.testng.basictests.BasicPositiveNumbersTest@4411d970]" name="checkValuePositive" duration-ms="0" started-at="2017-12-15T14:22:58Z" finished-at="2017-12-15T14:22:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValuePositive -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicPositiveNumbersTest@4411d970]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:22:58Z" finished-at="2017-12-15T14:22:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicPositiveNumbersTest -->
    </test> <!-- PositivesTest -->
    <test name="PowerTest" duration-ms="4" started-at="2017-12-15T11:23:03Z" finished-at="2017-12-15T11:23:03Z">
      <class name="com.epam.testng.basictests.BasicPowTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@13969fbe]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:23:03Z" finished-at="2017-12-15T14:23:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPowTwo()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@13969fbe]" name="testPowTwo" duration-ms="0" started-at="2017-12-15T14:23:03Z" finished-at="2017-12-15T14:23:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPowTwo -->
        <test-method status="PASS" signature="testPowOne()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@13969fbe]" name="testPowOne" duration-ms="0" started-at="2017-12-15T14:23:03Z" finished-at="2017-12-15T14:23:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPowOne -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@13969fbe]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:03Z" finished-at="2017-12-15T14:23:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicPowTest -->
    </test> <!-- PowerTest -->
    <test name="SquareRootTest" duration-ms="3" started-at="2017-12-15T11:23:08Z" finished-at="2017-12-15T11:23:08Z">
      <class name="com.epam.testng.basictests.BasicSqrtTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@3fb6a447]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:08Z" finished-at="2017-12-15T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPositiveNumbers()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@3fb6a447]" name="testPositiveNumbers" duration-ms="1" started-at="2017-12-15T14:23:08Z" finished-at="2017-12-15T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPositiveNumbers -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@3fb6a447]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:08Z" finished-at="2017-12-15T14:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicSqrtTest -->
    </test> <!-- SquareRootTest -->
  </suite> <!-- Smoke -->
  <suite name="End-to-end test" duration-ms="0" started-at="2017-12-15T11:27:54Z" finished-at="2017-12-15T11:27:54Z">
    <groups>
    </groups>
  </suite> <!-- End-to-end test -->
  <suite name="CriticalPath" duration-ms="55177" started-at="2017-12-15T11:23:13Z" finished-at="2017-12-15T11:24:08Z">
    <groups>
      <group name="negatives">
        <method signature="NegativeNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@39fb3ab6]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.NegativeNumbersTest"/>
        <method signature="NegativeNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.NegativeNumbersTest"/>
        <method signature="NegativeNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@61a485d2]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.NegativeNumbersTest"/>
        <method signature="NegativeNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@6276ae34]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.NegativeNumbersTest"/>
        <method signature="NegativeNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@7946e1f4]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.NegativeNumbersTest"/>
      </group> <!-- negatives -->
      <group name="cos">
        <method signature="BasicCosTest.testFullRotationAnglePlusOne()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@34b7bfc0]" name="testFullRotationAnglePlusOne" class="com.epam.testng.basictests.BasicCosTest"/>
        <method signature="BasicSinTest.testFullRotationAngle()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@3551a94]" name="testFullRotationAngle" class="com.epam.testng.basictests.BasicSinTest"/>
      </group> <!-- cos -->
      <group name="squareRoot">
        <method signature="BasicSqrtTest.testZero()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@5f375618]" name="testZero" class="com.epam.testng.basictests.BasicSqrtTest"/>
      </group> <!-- squareRoot -->
      <group name="subtraction">
        <method signature="SubDoublesTest.subPositiveLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@4e04a765]" name="subPositiveLongs" class="com.epam.testng.parameterizedtests.SubDoublesTest"/>
        <method signature="SubLongsTest.subPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358]" name="subPositiveLongs" class="com.epam.testng.parameterizedtests.SubLongsTest"/>
      </group> <!-- subtraction -->
      <group name="criticalPath">
        <method signature="SumDoublesTest.sumPositiveLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@38082d64]" name="sumPositiveLongs" class="com.epam.testng.parameterizedtests.SumDoublesTest"/>
        <method signature="SumLongsTest.sumPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@dfd3711]" name="sumPositiveLongs" class="com.epam.testng.parameterizedtests.SumLongsTest"/>
        <method signature="SubDoublesTest.subPositiveLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@4e04a765]" name="subPositiveLongs" class="com.epam.testng.parameterizedtests.SubDoublesTest"/>
        <method signature="SubLongsTest.subPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358]" name="subPositiveLongs" class="com.epam.testng.parameterizedtests.SubLongsTest"/>
        <method signature="BasicMultDoublesTest.multNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@60addb54]" name="multNegativeLongs" class="com.epam.testng.basictests.BasicMultDoublesTest"/>
        <method signature="BasicMultLongsTest.multNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@3f2a3a5]" name="multNegativeLongs" class="com.epam.testng.basictests.BasicMultLongsTest"/>
        <method signature="BasicDivDoublesTest.divideNegativeValues()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@47f6473]" name="divideNegativeValues" class="com.epam.testng.basictests.BasicDivDoublesTest"/>
        <method signature="BasicDivLongsTest.divideNegativeValues()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@15975490]" name="divideNegativeValues" class="com.epam.testng.basictests.BasicDivLongsTest"/>
        <method signature="BasicCosTest.testFullRotationAnglePlusOne()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@34b7bfc0]" name="testFullRotationAnglePlusOne" class="com.epam.testng.basictests.BasicCosTest"/>
        <method signature="BasicSinTest.testFullRotationAngle()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@3551a94]" name="testFullRotationAngle" class="com.epam.testng.basictests.BasicSinTest"/>
        <method signature="BasicCtgTest.testFullRotationAnglePlusOne()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@61dc03ce]" name="testFullRotationAnglePlusOne" class="com.epam.testng.basictests.BasicCtgTest"/>
        <method signature="BasicTgTest.testFullRotationAnglePlusOne()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@7f560810]" name="testFullRotationAnglePlusOne" class="com.epam.testng.basictests.BasicTgTest"/>
        <method signature="NegativeNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@39fb3ab6]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.NegativeNumbersTest"/>
        <method signature="NegativeNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.NegativeNumbersTest"/>
        <method signature="NegativeNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@61a485d2]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.NegativeNumbersTest"/>
        <method signature="NegativeNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@6276ae34]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.NegativeNumbersTest"/>
        <method signature="NegativeNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@7946e1f4]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.NegativeNumbersTest"/>
        <method signature="PositiveNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@2344fc66]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.PositiveNumbersTest"/>
        <method signature="PositiveNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@2669b199]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.PositiveNumbersTest"/>
        <method signature="PositiveNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@458ad742]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.PositiveNumbersTest"/>
        <method signature="PositiveNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.PositiveNumbersTest"/>
        <method signature="PositiveNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@6574b225]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.PositiveNumbersTest"/>
        <method signature="BasicPowTest.testPowNegativeTwo()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@48eff760]" name="testPowNegativeTwo" class="com.epam.testng.basictests.BasicPowTest"/>
        <method signature="BasicSqrtTest.testZero()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@5f375618]" name="testZero" class="com.epam.testng.basictests.BasicSqrtTest"/>
      </group> <!-- criticalPath -->
      <group name="division">
        <method signature="BasicDivDoublesTest.divideNegativeValues()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@47f6473]" name="divideNegativeValues" class="com.epam.testng.basictests.BasicDivDoublesTest"/>
        <method signature="BasicDivLongsTest.divideNegativeValues()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@15975490]" name="divideNegativeValues" class="com.epam.testng.basictests.BasicDivLongsTest"/>
      </group> <!-- division -->
      <group name="longs">
        <method signature="SumLongsTest.sumPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@dfd3711]" name="sumPositiveLongs" class="com.epam.testng.parameterizedtests.SumLongsTest"/>
        <method signature="SubLongsTest.subPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358]" name="subPositiveLongs" class="com.epam.testng.parameterizedtests.SubLongsTest"/>
        <method signature="BasicMultLongsTest.multNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@3f2a3a5]" name="multNegativeLongs" class="com.epam.testng.basictests.BasicMultLongsTest"/>
        <method signature="BasicDivLongsTest.divideNegativeValues()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@15975490]" name="divideNegativeValues" class="com.epam.testng.basictests.BasicDivLongsTest"/>
      </group> <!-- longs -->
      <group name="tg">
        <method signature="BasicTgTest.testFullRotationAnglePlusOne()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@7f560810]" name="testFullRotationAnglePlusOne" class="com.epam.testng.basictests.BasicTgTest"/>
      </group> <!-- tg -->
      <group name="doubles">
        <method signature="SumDoublesTest.sumPositiveLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@38082d64]" name="sumPositiveLongs" class="com.epam.testng.parameterizedtests.SumDoublesTest"/>
        <method signature="SubDoublesTest.subPositiveLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@4e04a765]" name="subPositiveLongs" class="com.epam.testng.parameterizedtests.SubDoublesTest"/>
        <method signature="BasicMultDoublesTest.multNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@60addb54]" name="multNegativeLongs" class="com.epam.testng.basictests.BasicMultDoublesTest"/>
        <method signature="BasicDivDoublesTest.divideNegativeValues()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@47f6473]" name="divideNegativeValues" class="com.epam.testng.basictests.BasicDivDoublesTest"/>
      </group> <!-- doubles -->
      <group name="ctg">
        <method signature="BasicCtgTest.testFullRotationAnglePlusOne()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@61dc03ce]" name="testFullRotationAnglePlusOne" class="com.epam.testng.basictests.BasicCtgTest"/>
      </group> <!-- ctg -->
      <group name="positives">
        <method signature="PositiveNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@2344fc66]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.PositiveNumbersTest"/>
        <method signature="PositiveNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@2669b199]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.PositiveNumbersTest"/>
        <method signature="PositiveNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@458ad742]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.PositiveNumbersTest"/>
        <method signature="PositiveNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.PositiveNumbersTest"/>
        <method signature="PositiveNumbersTest.checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@6574b225]" name="checkValuePositive" class="com.epam.testng.parameterizedtests.PositiveNumbersTest"/>
      </group> <!-- positives -->
      <group name="multiplication">
        <method signature="BasicMultDoublesTest.multNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@60addb54]" name="multNegativeLongs" class="com.epam.testng.basictests.BasicMultDoublesTest"/>
        <method signature="BasicMultLongsTest.multNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@3f2a3a5]" name="multNegativeLongs" class="com.epam.testng.basictests.BasicMultLongsTest"/>
      </group> <!-- multiplication -->
      <group name="power">
        <method signature="BasicPowTest.testPowNegativeTwo()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@48eff760]" name="testPowNegativeTwo" class="com.epam.testng.basictests.BasicPowTest"/>
      </group> <!-- power -->
      <group name="addition">
        <method signature="SumDoublesTest.sumPositiveLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@38082d64]" name="sumPositiveLongs" class="com.epam.testng.parameterizedtests.SumDoublesTest"/>
        <method signature="SumLongsTest.sumPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@dfd3711]" name="sumPositiveLongs" class="com.epam.testng.parameterizedtests.SumLongsTest"/>
      </group> <!-- addition -->
    </groups>
    <test name="AdditionTest" duration-ms="5" started-at="2017-12-15T11:23:13Z" finished-at="2017-12-15T11:23:13Z">
      <class name="com.epam.testng.parameterizedtests.SumLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@dfd3711]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:23:13Z" finished-at="2017-12-15T14:23:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="sumPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@dfd3711]" name="sumPositiveLongs" duration-ms="2" started-at="2017-12-15T14:23:13Z" data-provider="sumPositiveLongs" finished-at="2017-12-15T14:23:13Z">
          <exception class="org.testng.internal.reflect.MethodMatcherException">
            <message>
              <![CDATA[Data provider mismatchMethod: sumPositiveLongs([Parameter{index=0, type=long, declaredAnnotations=[]}, Parameter{index=1, type=long, declaredAnnotations=[]}, Parameter{index=2, type=long, declaredAnnotations=[]}])Arguments: [(java.lang.Long) 9223372036854775807,(java.lang.Long) 9223372036854775807,(java.lang.Double) 1.8446744E19]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.reflect.MethodMatcherException: Data provider mismatchMethod: sumPositiveLongs([Parameter{index=0, type=long, declaredAnnotations=[]}, Parameter{index=1, type=long, declaredAnnotations=[]}, Parameter{index=2, type=long, declaredAnnotations=[]}])Arguments: [(java.lang.Long) 9223372036854775807,(java.lang.Long) 9223372036854775807,(java.lang.Double) 1.8446744E19]at org.testng.internal.reflect.DataProviderMethodMatcher.getConformingArguments(DataProviderMethodMatcher.java:45)at org.testng.internal.Parameters.injectParameters(Parameters.java:796)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:973)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.reflect.MethodMatcherException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveLongs -->
        <test-method status="PASS" signature="sumPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@dfd3711]" name="sumPositiveLongs" duration-ms="0" started-at="2017-12-15T14:23:13Z" data-provider="sumPositiveLongs" finished-at="2017-12-15T14:23:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[99]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[99]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[198]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SumLongsTest@dfd3711]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:13Z" finished-at="2017-12-15T14:23:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.SumLongsTest -->
      <class name="com.epam.testng.parameterizedtests.SumDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@38082d64]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:23:13Z" finished-at="2017-12-15T14:23:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="sumPositiveLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@38082d64]" name="sumPositiveLongs" duration-ms="0" started-at="2017-12-15T14:23:13Z" data-provider="sumPositiveDoubles" finished-at="2017-12-15T14:23:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.56]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3.75]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveLongs -->
        <test-method status="PASS" signature="sumPositiveLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@38082d64]" name="sumPositiveLongs" duration-ms="0" started-at="2017-12-15T14:23:13Z" data-provider="sumPositiveDoubles" finished-at="2017-12-15T14:23:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.147483648E9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveLongs -->
        <test-method status="PASS" signature="sumPositiveLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@38082d64]" name="sumPositiveLongs" duration-ms="1" started-at="2017-12-15T14:23:13Z" data-provider="sumPositiveDoubles" finished-at="2017-12-15T14:23:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[50.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[50.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumPositiveLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SumDoublesTest@38082d64]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:13Z" finished-at="2017-12-15T14:23:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.SumDoublesTest -->
    </test> <!-- AdditionTest -->
    <test name="SubtractionTest" duration-ms="3" started-at="2017-12-15T11:23:18Z" finished-at="2017-12-15T11:23:18Z">
      <class name="com.epam.testng.parameterizedtests.SubDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@4e04a765]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:18Z" finished-at="2017-12-15T14:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="subPositiveLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@4e04a765]" name="subPositiveLongs" duration-ms="0" started-at="2017-12-15T14:23:18Z" data-provider="subPositiveDoubles" finished-at="2017-12-15T14:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.19]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2.56]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-1.37]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@4e04a765]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:18Z" finished-at="2017-12-15T14:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="subPositiveLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@4e04a765]" name="subPositiveLongs" duration-ms="0" started-at="2017-12-15T14:23:18Z" data-provider="subPositiveDoubles" finished-at="2017-12-15T14:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2.147483646E9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveLongs -->
        <test-method status="PASS" signature="subPositiveLongs(double, double, double)[pri:0, instance:com.epam.testng.parameterizedtests.SubDoublesTest@4e04a765]" name="subPositiveLongs" duration-ms="0" started-at="2017-12-15T14:23:18Z" data-provider="subPositiveDoubles" finished-at="2017-12-15T14:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[50.1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[50.1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveLongs -->
      </class> <!-- com.epam.testng.parameterizedtests.SubDoublesTest -->
      <class name="com.epam.testng.parameterizedtests.SubLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:18Z" finished-at="2017-12-15T14:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="subPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358]" name="subPositiveLongs" duration-ms="0" started-at="2017-12-15T14:23:18Z" data-provider="subPositiveLongs" finished-at="2017-12-15T14:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[99]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[99]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[Method SubLongsTest.subPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358] should have thrown an exception of type class org.testng.internal.reflect.MethodMatcherException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: Method SubLongsTest.subPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358] should have thrown an exception of type class org.testng.internal.reflect.MethodMatcherExceptionat org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)at org.testng.internal.Invoker.considerExceptions(Invoker.java:1130)at org.testng.internal.Invoker.invokeMethod(Invoker.java:603)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveLongs -->
        <test-method status="FAIL" signature="subPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358]" name="subPositiveLongs" duration-ms="0" started-at="2017-12-15T14:23:18Z" data-provider="subPositiveLongs" finished-at="2017-12-15T14:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2147483646]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[Method SubLongsTest.subPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358] should have thrown an exception of type class org.testng.internal.reflect.MethodMatcherException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: Method SubLongsTest.subPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358] should have thrown an exception of type class org.testng.internal.reflect.MethodMatcherExceptionat org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)at org.testng.internal.Invoker.considerExceptions(Invoker.java:1130)at org.testng.internal.Invoker.invokeMethod(Invoker.java:603)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveLongs -->
        <test-method status="FAIL" signature="subPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358]" name="subPositiveLongs" duration-ms="0" started-at="2017-12-15T14:23:18Z" data-provider="subPositiveLongs" finished-at="2017-12-15T14:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[50]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[Method SubLongsTest.subPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358] should have thrown an exception of type class org.testng.internal.reflect.MethodMatcherException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: Method SubLongsTest.subPositiveLongs(long, long, long)[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358] should have thrown an exception of type class org.testng.internal.reflect.MethodMatcherExceptionat org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:80)at org.testng.internal.Invoker.considerExceptions(Invoker.java:1130)at org.testng.internal.Invoker.invokeMethod(Invoker.java:603)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subPositiveLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.SubLongsTest@783e6358]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:18Z" finished-at="2017-12-15T14:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.SubLongsTest -->
    </test> <!-- SubtractionTest -->
    <test name="MultiplicationTest" duration-ms="3" started-at="2017-12-15T11:23:23Z" finished-at="2017-12-15T11:23:23Z">
      <class name="com.epam.testng.basictests.BasicMultLongsTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@3f2a3a5]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:23Z" finished-at="2017-12-15T14:23:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="multNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@3f2a3a5]" name="multNegativeLongs" duration-ms="1" started-at="2017-12-15T14:23:23Z" finished-at="2017-12-15T14:23:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [8.507059173023462E37] but found [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [8.507059173023462E37] but found [1]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicMultLongsTest.multNegativeLongs(BasicMultLongsTest.java:20)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicMultLongsTest@3f2a3a5]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:23Z" finished-at="2017-12-15T14:23:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicMultLongsTest -->
      <class name="com.epam.testng.basictests.BasicMultDoublesTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@60addb54]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:23:23Z" finished-at="2017-12-15T14:23:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="multNegativeLongs()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@60addb54]" name="multNegativeLongs" duration-ms="1" started-at="2017-12-15T14:23:23Z" finished-at="2017-12-15T14:23:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multNegativeLongs -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicMultDoublesTest@60addb54]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:23Z" finished-at="2017-12-15T14:23:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicMultDoublesTest -->
    </test> <!-- MultiplicationTest -->
    <test name="DivisionTest" duration-ms="3" started-at="2017-12-15T11:23:28Z" finished-at="2017-12-15T11:23:28Z">
      <class name="com.epam.testng.basictests.BasicDivLongsTest">
        <test-method status="PASS" signature="divideNegativeValues()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@15975490]" name="divideNegativeValues" duration-ms="1" started-at="2017-12-15T14:23:28Z" finished-at="2017-12-15T14:23:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divideNegativeValues -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@15975490]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:28Z" finished-at="2017-12-15T14:23:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicDivLongsTest@15975490]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:28Z" finished-at="2017-12-15T14:23:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicDivLongsTest -->
      <class name="com.epam.testng.basictests.BasicDivDoublesTest">
        <test-method status="PASS" signature="divideNegativeValues()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@47f6473]" name="divideNegativeValues" duration-ms="1" started-at="2017-12-15T14:23:28Z" finished-at="2017-12-15T14:23:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divideNegativeValues -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@47f6473]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:28Z" finished-at="2017-12-15T14:23:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicDivDoublesTest@47f6473]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:28Z" finished-at="2017-12-15T14:23:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicDivDoublesTest -->
    </test> <!-- DivisionTest -->
    <test name="CosinusTest" duration-ms="3" started-at="2017-12-15T11:23:33Z" finished-at="2017-12-15T11:23:33Z">
      <class name="com.epam.testng.basictests.BasicCosTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@34b7bfc0]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:23:33Z" finished-at="2017-12-15T14:23:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@34b7bfc0]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:33Z" finished-at="2017-12-15T14:23:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="FAIL" signature="testFullRotationAnglePlusOne()[pri:0, instance:com.epam.testng.basictests.BasicCosTest@34b7bfc0]" name="testFullRotationAnglePlusOne" duration-ms="0" started-at="2017-12-15T14:23:33Z" finished-at="2017-12-15T14:23:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [0.9998476951563913] but found [0.01745240643728307]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [0.9998476951563913] but found [0.01745240643728307]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicCosTest.testFullRotationAnglePlusOne(BasicCosTest.java:27)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullRotationAnglePlusOne -->
      </class> <!-- com.epam.testng.basictests.BasicCosTest -->
    </test> <!-- CosinusTest -->
    <test name="SinusTest" duration-ms="3" started-at="2017-12-15T11:23:38Z" finished-at="2017-12-15T11:23:38Z">
      <class name="com.epam.testng.basictests.BasicSinTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@3551a94]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:38Z" finished-at="2017-12-15T14:23:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFullRotationAngle()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@3551a94]" name="testFullRotationAngle" duration-ms="0" started-at="2017-12-15T14:23:38Z" finished-at="2017-12-15T14:23:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullRotationAngle -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicSinTest@3551a94]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:38Z" finished-at="2017-12-15T14:23:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicSinTest -->
    </test> <!-- SinusTest -->
    <test name="CotangentTest" duration-ms="2" started-at="2017-12-15T11:23:43Z" finished-at="2017-12-15T11:23:43Z">
      <class name="com.epam.testng.basictests.BasicCtgTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@61dc03ce]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:43Z" finished-at="2017-12-15T14:23:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testFullRotationAnglePlusOne()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@61dc03ce]" name="testFullRotationAnglePlusOne" duration-ms="0" started-at="2017-12-15T14:23:43Z" finished-at="2017-12-15T14:23:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [57.289961630760885] but found [0.999993264600188]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [57.289961630760885] but found [0.999993264600188]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicCtgTest.testFullRotationAnglePlusOne(BasicCtgTest.java:27)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullRotationAnglePlusOne -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicCtgTest@61dc03ce]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:43Z" finished-at="2017-12-15T14:23:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicCtgTest -->
    </test> <!-- CotangentTest -->
    <test name="TangentTest" duration-ms="3" started-at="2017-12-15T11:23:48Z" finished-at="2017-12-15T11:23:48Z">
      <class name="com.epam.testng.basictests.BasicTgTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@7f560810]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:23:48Z" finished-at="2017-12-15T14:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testFullRotationAnglePlusOne()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@7f560810]" name="testFullRotationAnglePlusOne" duration-ms="0" started-at="2017-12-15T14:23:48Z" finished-at="2017-12-15T14:23:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Invalid operation result expected [0.017455064928217145] but found [1.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Invalid operation result expected [0.017455064928217145] but found [1.0]at org.testng.Assert.fail(Assert.java:96)at org.testng.Assert.failNotEquals(Assert.java:776)at org.testng.Assert.assertEqualsImpl(Assert.java:137)at org.testng.Assert.assertEquals(Assert.java:118)at com.epam.testng.basictests.BasicTgTest.testFullRotationAnglePlusOne(BasicTgTest.java:28)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)at java.lang.reflect.Method.invoke(Method.java:498)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.Invoker.invokeMethod(Invoker.java:571)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)at java.lang.Thread.run(Thread.java:748)]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullRotationAnglePlusOne -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicTgTest@7f560810]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:23:48Z" finished-at="2017-12-15T14:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicTgTest -->
    </test> <!-- TangentTest -->
    <test name="NegativesTest" duration-ms="6" started-at="2017-12-15T11:23:53Z" finished-at="2017-12-15T11:23:53Z">
      <class name="com.epam.testng.parameterizedtests.NegativeNumbersTest">
        <test-method status="PASS" signature="checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@39fb3ab6]" name="checkValuePositive" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValuePositive -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="checkValuePositive" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValuePositive -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@61a485d2]" name="checkValuePositive" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValuePositive -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@6276ae34]" name="checkValuePositive" duration-ms="1" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValuePositive -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@7946e1f4]" name="checkValuePositive" duration-ms="1" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValuePositive -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.NegativeNumbersTest@3c09711b]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:53Z" finished-at="2017-12-15T14:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.NegativeNumbersTest -->
    </test> <!-- NegativesTest -->
    <test name="PositivesTest" duration-ms="7" started-at="2017-12-15T11:23:58Z" finished-at="2017-12-15T11:23:58Z">
      <class name="com.epam.testng.parameterizedtests.PositiveNumbersTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@2344fc66]" name="checkValuePositive" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValuePositive -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@2669b199]" name="checkValuePositive" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValuePositive -->
        <test-method status="PASS" signature="checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@458ad742]" name="checkValuePositive" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValuePositive -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
        <test-method status="PASS" signature="checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="checkValuePositive" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValuePositive -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="checkValuePositive()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@6574b225]" name="checkValuePositive" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValuePositive -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.parameterizedtests.PositiveNumbersTest@5afa04c]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:23:58Z" finished-at="2017-12-15T14:23:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.parameterizedtests.PositiveNumbersTest -->
    </test> <!-- PositivesTest -->
    <test name="PowerTest" duration-ms="3" started-at="2017-12-15T11:24:03Z" finished-at="2017-12-15T11:24:03Z">
      <class name="com.epam.testng.basictests.BasicPowTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@48eff760]" name="setUp" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:03Z" finished-at="2017-12-15T14:24:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testPowNegativeTwo()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@48eff760]" name="testPowNegativeTwo" duration-ms="0" started-at="2017-12-15T14:24:03Z" finished-at="2017-12-15T14:24:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPowNegativeTwo -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicPowTest@48eff760]" name="printOnFinish" is-config="true" duration-ms="1" started-at="2017-12-15T14:24:03Z" finished-at="2017-12-15T14:24:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicPowTest -->
    </test> <!-- PowerTest -->
    <test name="SquareRootTest" duration-ms="2" started-at="2017-12-15T11:24:08Z" finished-at="2017-12-15T11:24:08Z">
      <class name="com.epam.testng.basictests.BasicSqrtTest">
        <test-method status="PASS" signature="testZero()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@5f375618]" name="testZero" duration-ms="0" started-at="2017-12-15T14:24:08Z" finished-at="2017-12-15T14:24:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testZero -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@5f375618]" name="setUp" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:08Z" finished-at="2017-12-15T14:24:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="printOnFinish()[pri:0, instance:com.epam.testng.basictests.BasicSqrtTest@5f375618]" name="printOnFinish" is-config="true" duration-ms="0" started-at="2017-12-15T14:24:08Z" finished-at="2017-12-15T14:24:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- printOnFinish -->
      </class> <!-- com.epam.testng.basictests.BasicSqrtTest -->
    </test> <!-- SquareRootTest -->
  </suite> <!-- CriticalPath -->
</testng-results>
